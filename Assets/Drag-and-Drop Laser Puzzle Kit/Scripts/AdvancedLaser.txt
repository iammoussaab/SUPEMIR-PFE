// using System.Collections;
// using System.Collections.Generic;
// using UnityEngine;
// using UnityEngine.Events;

// namespace MoonBika
// {
//     [RequireComponent(typeof(LineRenderer))]
//     public class AdvancedLaser : MonoBehaviour
//     {
//         [Header("Laser Settings")]
//         public LayerMask layerMask;
//         public float defaultLength = 50;
//         public int numOfReflections = 2;
//         public bool enableReflection = true;
//         public bool disableOnTargetHit = false;

//         [Header("Particle Effects")]
//         public Transform laserHitParticlePrefab;
//         public bool showParticlesOnHit = true;

//         [Header("Target System")]
//         public string targetTag = "LaserTarget";
//         public GameObject targetObject;

//         [Header("Events")]
//         [SerializeField] public UnityEvent<GameObject> onObjectHit;
//         [SerializeField] public UnityEvent<Vector3> onHitPosition;
//         [SerializeField] public UnityEvent<LaserTarget> onTargetHit;
//         [SerializeField] public UnityEvent onAnyTargetHit;
//         [SerializeField] public UnityEvent onTargetObjectHit;
//         [SerializeField] public UnityEvent onLaserDisabled;

//         private LineRenderer _lineRenderer;
//         private RaycastHit hit;
//         private Ray ray;
//         private List<Transform> hitParticles = new List<Transform>();
//         private bool isLaserActive = true;

//         void Start()
//         {
//             _lineRenderer = GetComponent<LineRenderer>();

//             if (laserHitParticlePrefab != null && showParticlesOnHit)
//             {
//                 for (int i = 0; i <= numOfReflections; i++)
//                 {
//                     Transform particle = Instantiate(laserHitParticlePrefab, Vector3.zero, Quaternion.identity);
//                     particle.gameObject.SetActive(false);
//                     hitParticles.Add(particle);
//                 }
//             }
//         }

//         void Update()
//         {
//             if (!isLaserActive)
//             {
//                 _lineRenderer.positionCount = 0;
//                 DeactivateAllParticles();
//                 return;
//             }

//             if (enableReflection)
//             {
//                 ReflectLaser();
//             }
//             else
//             {
//                 NormalLaser();
//             }
//         }

//         private void DeactivateAllParticles()
//         {
//             foreach (Transform particle in hitParticles)
//             {
//                 if (particle != null)
//                     particle.gameObject.SetActive(false);
//             }
//         }

//         void ReflectLaser()
//         {
//             DeactivateAllParticles();

//             ray = new Ray(transform.position, transform.forward);
//             _lineRenderer.positionCount = 1;
//             _lineRenderer.SetPosition(0, transform.position);
//             float remainLength = defaultLength;

//             for (int i = 0; i < numOfReflections; i++)
//             {
//                 if (Physics.Raycast(ray.origin, ray.direction, out hit, remainLength, layerMask))
//                 {
//                     _lineRenderer.positionCount += 1;
//                     _lineRenderer.SetPosition(_lineRenderer.positionCount - 1, hit.point);

//                     if (showParticlesOnHit && i < hitParticles.Count && hitParticles[i] != null)
//                     {
//                         hitParticles[i].gameObject.SetActive(true);
//                         hitParticles[i].position = hit.point;
//                         hitParticles[i].rotation = Quaternion.LookRotation(hit.normal);
//                     }

//                     ProcessHitObject(hit.collider.gameObject, hit.point, ray.direction);

//                     remainLength -= Vector3.Distance(ray.origin, hit.point);
//                     ray = new Ray(hit.point, Vector3.Reflect(ray.direction, hit.normal));
//                 }
//                 else
//                 {
//                     _lineRenderer.positionCount += 1;
//                     _lineRenderer.SetPosition(_lineRenderer.positionCount - 1, ray.origin + (ray.direction * remainLength));
//                     break;
//                 }
//             }
//         }

//         void NormalLaser()
//         {
//             DeactivateAllParticles();

//             _lineRenderer.positionCount = 2;
//             _lineRenderer.SetPosition(0, transform.position);

//             if (Physics.Raycast(transform.position, transform.forward, out hit, defaultLength, layerMask))
//             {
//                 _lineRenderer.SetPosition(1, hit.point);

//                 if (showParticlesOnHit && hitParticles.Count > 0 && hitParticles[0] != null)
//                 {
//                     hitParticles[0].gameObject.SetActive(true);
//                     hitParticles[0].position = hit.point;
//                     hitParticles[0].rotation = Quaternion.LookRotation(hit.normal);
//                 }

//                 ProcessHitObject(hit.collider.gameObject, hit.point, transform.forward);
//             }
//             else
//             {
//                 _lineRenderer.SetPosition(1, transform.position + transform.forward * defaultLength);
//             }
//         }

//         void ProcessHitObject(GameObject hitObject, Vector3 hitPoint, Vector3 incomingDirection)
//         {
//             onObjectHit?.Invoke(hitObject);
//             onHitPosition?.Invoke(hitPoint);

//             if (targetObject != null && hitObject == targetObject)
//             {
//                 onTargetObjectHit?.Invoke();
//                 if (disableOnTargetHit)
//                 {
//                     DisableLaser();
//                 }
//             }

//             LaserTarget target = hitObject.GetComponent<LaserTarget>();
//             if (target != null)
//             {
//                 target.OnLaserHit(hitPoint, incomingDirection, this);
//                 onTargetHit?.Invoke(target);
//                 onAnyTargetHit?.Invoke();
//             }

//             LaserHitObject hitComponent = hitObject.GetComponent<LaserHitObject>();
//             if (hitComponent != null)
//             {
//                 hitComponent.OnHit(hitPoint, incomingDirection);
//             }
//         }

//         public void DisableLaser()
//         {
//             if (isLaserActive)
//             {
//                 isLaserActive = false;
//                 onLaserDisabled?.Invoke();
//             }
//         }

//         public void EnableLaser()
//         {
//             isLaserActive = true;
//         }

//         public void ToggleLaser()
//         {
//             if (isLaserActive)
//             {
//                 DisableLaser();
//             }
//             else
//             {
//                 EnableLaser();
//             }
//         }

//         public bool IsLaserActive()
//         {
//             return isLaserActive;
//         }
//     }

//     public class LaserHitObject : MonoBehaviour
//     {
//         [Header("Hit Events")]
//         public UnityEvent<Vector3> onLaserHit;
//         public UnityEvent onAnyLaserHit;

//         public void OnHit(Vector3 hitPosition, Vector3 incomingDirection)
//         {
//             onLaserHit?.Invoke(hitPosition);
//             onAnyLaserHit?.Invoke();
//         }
//     }

//     public class LaserTarget : MonoBehaviour
//     {
//         [Header("Target Settings")]
//         public bool isActive = true;

//         [Header("Target Events")]
//         public UnityEvent<Vector3> onLaserHit;
//         public UnityEvent onLaserHitBegin;
//         public UnityEvent onLaserHitEnd;

//         private bool wasHitLastFrame = false;
//         private AdvancedLaser currentLaser = null;

//         void Update()
//         {
//             bool isHitThisFrame = (currentLaser != null && currentLaser.IsLaserActive());

//             if (isHitThisFrame && !wasHitLastFrame)
//             {
//                 onLaserHitBegin?.Invoke();
//             }
//             else if (!isHitThisFrame && wasHitLastFrame)
//             {
//                 onLaserHitEnd?.Invoke();
//                 currentLaser = null;
//             }

//             wasHitLastFrame = isHitThisFrame;
//         }

//         public void OnLaserHit(Vector3 hitPosition, Vector3 incomingDirection, AdvancedLaser laser)
//         {
//             if (!isActive) return;

//             currentLaser = laser;
//             onLaserHit?.Invoke(hitPosition);
//         }

//         public bool IsBeingHit()
//         {
//             return wasHitLastFrame;
//         }
//     }

//     [System.Serializable]
//     public class LaserPuzzleController : MonoBehaviour
//     {
//         [Header("Puzzle Settings")]
//         public List<LaserTarget> requiredTargets = new List<LaserTarget>();
//         public bool requireAllTargets = true;
//         public float activationDelay = 0.5f;
//         public List<GameObject> requiredTargetObjects = new List<GameObject>();

//         [Header("Line Renderer Settings")]
//         public List<LineRenderer> lineRenderersToActivate = new List<LineRenderer>();

//         [Header("Mirror Settings")]
//         public List<GameObject> mirrorsToControl = new List<GameObject>();

//         [Header("Puzzle Events")]
//         public UnityEvent onPuzzleSolved;
//         public UnityEvent onPuzzleReset;

//         public float solveTimer = 0f;
//         private bool isPuzzleSolved = false;
//         public List<AdvancedLaser> activeLasers = new List<AdvancedLaser>();
//         private Coroutine mirrorDeactivationCoroutine = null;

//         void Start()
//         {
//             activeLasers.AddRange(FindObjectsOfType<AdvancedLaser>());

//             foreach (LineRenderer lr in lineRenderersToActivate)
//             {
//                 if (lr != null)
//                     lr.enabled = false;
//             }
//         }

//         void Update()
//         {
//             bool allTargetsHit = CheckAllTargetsHit();

//             if (allTargetsHit && !isPuzzleSolved)
//             {
//                 solveTimer += Time.deltaTime;

//                 if (solveTimer >= activationDelay)
//                 {
//                     if (mirrorDeactivationCoroutine == null)
//                     {
//                         mirrorDeactivationCoroutine = StartCoroutine(SolvePuzzleWithMirrorDeactivation());
//                     }
//                 }
//             }
//             else if (!allTargetsHit && isPuzzleSolved)
//             {
//                 isPuzzleSolved = false;
//                 onPuzzleReset?.Invoke();
//                 solveTimer = 0f;
//                 if (mirrorDeactivationCoroutine != null)
//                 {
//                     StopCoroutine(mirrorDeactivationCoroutine);
//                     mirrorDeactivationCoroutine = null;
//                 }
//                 foreach (LineRenderer lr in lineRenderersToActivate)
//                 {
//                     if (lr != null)
//                         lr.enabled = false;
//                 }
//                 foreach (AdvancedLaser laser in activeLasers)
//                 {
//                     if (laser != null && laser.IsLaserActive())
//                     {
//                         LineRenderer laserLineRenderer = laser.GetComponent<LineRenderer>();
//                         if (laserLineRenderer != null)
//                             laserLineRenderer.enabled = true;
//                     }
//                 }
//             }
//             else if (!allTargetsHit)
//             {
//                 solveTimer = 0f;
//             }
//         }

//         private IEnumerator SolvePuzzleWithMirrorDeactivation()
//         {
//             foreach (AdvancedLaser laser in activeLasers)
//             {
//                 if (laser != null && laser.IsLaserActive())
//                 {
//                     LineRenderer laserLineRenderer = laser.GetComponent<LineRenderer>();
//                     if (laserLineRenderer != null)
//                         laserLineRenderer.enabled = false;
//                 }
//             }

//             yield return new WaitForSeconds(3f);

//             foreach (GameObject mirror in mirrorsToControl)
//             {
//                 if (mirror != null)
//                     mirror.SetActive(false);
//             }

//             foreach (LineRenderer lr in lineRenderersToActivate)
//             {
//                 if (lr != null)
//                     lr.enabled = true;
//             }

//             isPuzzleSolved = true;
//             onPuzzleSolved?.Invoke();
//             mirrorDeactivationCoroutine = null;
//         }

//         bool CheckAllTargetsHit()
//         {
//             if (requireAllTargets)
//             {
//                 foreach (LaserTarget target in requiredTargets)
//                 {
//                     if (target == null || !target.IsBeingHit())
//                     {
//                         return false;
//                     }
//                 }

//                 foreach (GameObject targetObj in requiredTargetObjects)
//                 {
//                     bool isHit = false;
//                     foreach (AdvancedLaser laser in activeLasers)
//                     {
//                         if (laser != null && laser.targetObject == targetObj && laser.IsLaserActive())
//                         {
//                             isHit = true;
//                             break;
//                         }
//                     }

//                     if (!isHit)
//                     {
//                         return false;
//                     }
//                 }

//                 return true;
//             }
//             else
//             {
//                 foreach (LaserTarget target in requiredTargets)
//                 {
//                     if (target != null && target.IsBeingHit())
//                     {
//                         return true;
//                     }
//                 }

//                 foreach (GameObject targetObj in requiredTargetObjects)
//                 {
//                     foreach (AdvancedLaser laser in activeLasers)
//                     {
//                         if (laser != null && laser.targetObject == targetObj && laser.IsLaserActive())
//                         {
//                             return true;
//                         }
//                     }
//                 }

//                 return false;
//             }
//         }

//         public void ResetPuzzle()
//         {
//             isPuzzleSolved = false;
//             solveTimer = 0f;
//             foreach (GameObject mirror in mirrorsToControl)
//             {
//                 if (mirror != null)
//                     mirror.SetActive(true);
//             }
//             foreach (LineRenderer lr in lineRenderersToActivate)
//             {
//                 if (lr != null)
//                     lr.enabled = false;
//             }
//             foreach (AdvancedLaser laser in activeLasers)
//             {
//                 if (laser != null && laser.IsLaserActive())
//                 {
//                     LineRenderer laserLineRenderer = laser.GetComponent<LineRenderer>();
//                     if (laserLineRenderer != null)
//                         laserLineRenderer.enabled = true;
//                 }
//             }
//             if (mirrorDeactivationCoroutine != null)
//             {
//                 StopCoroutine(mirrorDeactivationCoroutine);
//                 mirrorDeactivationCoroutine = null;
//             }
//         }
//     }
// }
